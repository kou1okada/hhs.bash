#!/usr/bin/env bash

source "$(type -p hhs.bash)"
hhs_compatibility_check VERSION 0.0.2



function temperature_celsius ()
#   Put temperature by celsius.
{
  awk -vK="${OPT_K}" 'BEGIN{print K-273.15;exit}'
}

function temperature_fahrenheit ()
#   Put temperature by fahrenheit.
{
  awk -vK="${OPT_K}" 'BEGIN{print K*9/5-459.67;exit}'
}

function temperature_kelvin ()
#   Put temperature by kelvin.
{
  echo "${OPT_K}"
}



function optparse_temperature ()
{
  case "$1" in
    -c|--celsius) # TEMPERATURE
      # Set temperature with celsius.
      nparams 1
      optset K $( awk -v C="$2" 'BEGIN{print C + 273.15; exit}' )
      ;;
    -f|--fahrenheit) # TEMPERATURE
      # Set temperature with fahrenheit.
      nparams 1
      optset K $( awk -v F="$2" 'BEGIN{print (F + 459.67) * 5 / 9; exit}' )
      ;;
    -k|--kelvin) # TEMPERATURE
      # Set temperature with kelvin.
      nparams 1
      optset K "$2"
      ;;
    -o) # [VALUE=default]
      # Short option with a optional value.
      nparams 1 1
      optset O default
      ;;
    --optional) # [VALUE=default]
      # Long option with a optional value.
      nparams 1 1
      optset OPTIONAL default
      ;;
    -o|--optional) # [VALUE=default]
      # Short and long options with a optional value.
      nparams 1 1
      optset OPTIONAL default
      ;;
    *)
      return 1
      ;;
  esac
}

has_subcommand_temperature=1

function temperature () # [OPTIONS] [COMMAND]
#   Convert units of the temperature.
{
  :
}

invoke_command "$@"
